name: Build and Publish

# Based on Publish Docker Container template workflow.
# https://github.com/Rapha01/activityRank-bot/new/master?workflow_template=ci%2Fdocker-publish
# Based on a Medium article by Haridasan Balakrishnan.
# https://medium.com/@haridasan/build-docker-images-using-github-actions-for-nestjs-monorepo-with-the-help-of-git-tags-9f6d404c40c5

on:
  push:
    tags: ['**']

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Check that the tag is valid. 
      # For instance:
      # * @activityrank/bot/v1.2.3
      # * @activityrank/bot:v1.2.3
      # * bot:v1.2.3
      # * bot/v1.2.3
      # * bot-1.2.3

      # Example invalid names: 
      # * v1.2.3, 
      # * bot/1.2.3

      # ⚠️ Technically valid (but unintended) names: ⚠️
      # * @activityrank/v1.2.3 (matches as [module = activityrank, version = v1.2.3])

      - name: Match tag name
        uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.ref_name }}
          regex: '(?:@activityrank\/)?([a-z-]+)[\/:-](?:v)\d+\.\d+\.\d+'

      - name: Exit if tag not matched
        if: ${{ steps.regex-match.outputs.match == '' }}
        run: |
          echo "Tag was not matched"
          exit 1

      # $APP is set to the name of the component being deployed - following the earlier example, `bot`
      - name: Set APP env variable
        run: echo "APP=${{ steps.regex-match.outputs.group1 }}" >> $GITHUB_ENV


      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/rapha01/activityrank/${{ env.APP }}
          tags: |
            type=match,pattern=(?:@activityrank\/)?(?:[a-z-]+)[\/:-](?:v)(\d+\.\d+\.\d+),group=1
            type=match,pattern=(?:@activityrank\/)?(?:[a-z-]+)[\/:-](?:v)(\d+\.\d+)\.\d+,group=1
            type=match,pattern=(?:@activityrank\/)?(?:[a-z-]+)[\/:-](?:v)(\d+)\.\d+\.\d+,group=1

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        if: env.APP != 'cli'
        with:
          context: .
          file: ./apps/${{ env.APP }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
